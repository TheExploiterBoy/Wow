local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==6) then v40=nil;function v40()local v43=0;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==2) then for v104=1,v35() do local v105=v33();if (v32(v105,1,1)==0) then local v121=v32(v105,2,3);local v122=v32(v105,2 + 2 ,1 + 5 );local v123={v34(),v34(),nil,nil};if (v121==0) then local v129=0;while true do if (v129==0) then v123[3]=v34();v123[4]=v34();break;end end elseif (v121==1) then v123[880 -(282 + 595) ]=v35();elseif (v121==(1639 -(1523 + 114))) then v123[3]=v35() -(2^16) ;elseif (v121==3) then local v140=0;while true do if (v140==0) then v123[3]=v35() -(2^16) ;v123[4]=v34();break;end end end if (v32(v122,1,1)==1) then v123[2]=v49[v123[2]];end if (v32(v122,2,2)==1) then v123[3]=v49[v123[3]];end if (v32(v122,3,3)==1) then v123[4]=v49[v123[4 + 0 ]];end v44[v104]=v123;end end for v106=1,v35() do v45[v106-1 ]=v40();end return v47;end if (v43==1) then v48=v35();v49={};for v108=1,v48 do local v109=0;local v110;local v111;while true do if (v109==1) then if (v110==1) then v111=v33()~=(927 -(214 + 713)) ;elseif (v110==2) then v111=v36();elseif (v110==3) then v111=v37();end v49[v108]=v111;break;end if (v109==0) then v110=v33();v111=nil;v109=1;end end end v47[3]=v33();v43=2;end if (v43==0) then v44={};v45={};v46={};v47={v44,v45,nil,v46};v43=1;end end end v41=nil;v29=7;end if (5==v29) then v38=v35;v39=nil;function v39(...)return {...},v20("#",...);end v29=6;end if (3==v29) then v35=nil;function v35()local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==1) then return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end if (v50==0) then v51,v52,v53,v54=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;v50=1;end end end v36=nil;v29=4;end if (1==v29) then v32=nil;function v32(v55,v56,v57)if v57 then local v95=(v55/(2^(v56-1)))%(2^(((v57-1) -(v56-1)) + 1)) ;return v95-(v95%1) ;else local v96=0;local v97;while true do if (v96==0) then v97=2^(v56-(2 -1)) ;return (((v55%(v97 + v97))>=v97) and 1) or (0 -0) ;end end end end v33=nil;v29=2;end if (v29==4) then function v36()local v58=0;local v59;local v60;local v61;local v62;local v63;local v64;while true do if (v58==2) then v63=v32(v60,21,31);v64=((v32(v60,32)==1) and  -(932 -(857 + 74))) or 1 ;v58=3;end if (1==v58) then v61=1;v62=(v32(v60,620 -(555 + 64) ,20) * (2^32)) + v59 ;v58=2;end if (0==v58) then v59=v35();v60=v35();v58=1;end if (v58==3) then if (v63==0) then if (v62==0) then return v64 * 0 ;else local v126=0;while true do if (v126==0) then v63=1;v61=0;break;end end end elseif (v63==2047) then return ((v62==0) and (v64 * (1/0))) or (v64 * NaN) ;end return v16(v64,v63-1023 ) * (v61 + (v62/(2^52))) ;end end end v37=nil;function v37(v65)local v66=0;local v67;local v68;while true do if (v66==1) then v67=v11(v27,v30,(v30 + v65) -1 );v30=v30 + v65 ;v66=2;end if (v66==0) then v67=nil;if  not v65 then local v118=0;while true do if (v118==0) then v65=v35();if (v65==0) then return "";end break;end end end v66=1;end if (v66==2) then v68={};for v112=1, #v67 do v68[v112]=v10(v9(v11(v67,v112,v112)));end v66=3;end if (3==v66) then return v14(v68);end end end v29=5;end if (v29==2) then function v33()local v69=0;local v70;while true do if (v69==1) then return v70;end if (v69==0) then v70=v9(v27,v30,v30);v30=v30 + 1 ;v69=1;end end end v34=nil;function v34()local v71=0;local v72;local v73;while true do if (v71==0) then v72,v73=v9(v27,v30,v30 + 2 );v30=v30 + (4 -2) ;v71=1;end if (1==v71) then return (v73 * 256) + v72 ;end end end v29=3;end if (0==v29) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\179\123","\114\157\85\84"),function(v74)if (v9(v74,5 -3 )==79) then local v98=0;while true do if (v98==0) then v31=v8(v11(v74,1,1));return "";end end else local v99=0;local v100;while true do if (v99==0) then v100=v10(v8(v74,16));if v31 then local v127=0;local v128;while true do if (0==v127) then v128=v13(v100,v31);v31=nil;v127=1;end if (v127==1) then return v128;end end else return v100;end break;end end end end);v29=1;end if (v29==7) then function v41(v75,v76,v77)local v78=v75[1];local v79=v75[2];local v80=v75[3];return function(...)local v81=v78;local v82=v79;local v83=v80;local v84=v39;local v85=1;local v86= -(1 -0);local v87={};local v88={...};local v89=v20("#",...) -1 ;local v90={};local v91={};for v101=0,v89 do if (v101>=v83) then v87[v101-v83 ]=v88[v101 + 1 ];else v91[v101]=v88[v101 + 1 ];end end local v92=(v89-v83) + (1271 -(226 + 1044)) ;local v93;local v94;while true do local v102=0;while true do if (0==v102) then v93=v81[v85];v94=v93[1];v102=1;end if (v102==1) then if (v94<=42) then if (v94<=20) then if (v94<=9) then if (v94<=4) then if (v94<=1) then if (v94>0) then local v143=v93[2];v91[v143]=v91[v143]();else local v145=v93[3];local v146=v91[v145];for v219=v145 + 1 ,v93[17 -13 ] do v146=v146   .. v91[v219] ;end v91[v93[2]]=v146;end elseif (v94<=2) then v77[v93[3]]=v91[v93[2]];elseif (v94==3) then v91[v93[2]][v91[v93[120 -(32 + 85) ]]]=v93[4];else v91[v93[2]]=v91[v93[3]];end elseif (v94<=6) then if (v94==(5 + 0)) then local v150=0;local v151;while true do if (v150==0) then v151=v93[2];v91[v151]=v91[v151](v21(v91,v151 + 1 ,v86));break;end end else do return;end end elseif (v94<=7) then v91[v93[1 + 1 ]]=v91[v93[3]]%v91[v93[4]] ;elseif (v94==8) then local v229=v93[959 -(892 + 65) ];v91[v229]=v91[v229](v21(v91,v229 + 1 ,v93[7 -4 ]));else local v231=v93[3 -1 ];local v232={};for v314=1, #v90 do local v315=0;local v316;while true do if (v315==0) then v316=v90[v314];for v413=0, #v316 do local v414=v316[v413];local v415=v414[1];local v416=v414[2];if ((v415==v91) and (v416>=v231)) then local v431=0;while true do if (v431==0) then v232[v416]=v415[v416];v414[1]=v232;break;end end end end break;end end end end elseif (v94<=14) then if (v94<=11) then if (v94==10) then v91[v93[2]][v91[v93[3]]]=v93[4];else v91[v93[2]]=v41(v82[v93[4 -1 ]],nil,v77);end elseif (v94<=12) then v91[v93[2]]=v93[3] + v91[v93[4]] ;elseif (v94>13) then local v233=0;local v234;local v235;local v236;while true do if (v233==0) then v234=v93[2];v235=v91[v234];v233=1;end if (1==v233) then v236=v91[v234 + (352 -(87 + 263)) ];if (v236>0) then if (v235>v91[v234 + 1 ]) then v85=v93[183 -(67 + 113) ];else v91[v234 + 3 ]=v235;end elseif (v235<v91[v234 + 1 ]) then v85=v93[3];else v91[v234 + 3 ]=v235;end break;end end else local v237=0;local v238;local v239;while true do if (v237==0) then v238=v93[2];v239=v91[v93[3]];v237=1;end if (v237==1) then v91[v238 + 1 ]=v239;v91[v238]=v239[v93[4]];break;end end end elseif (v94<=17) then if (v94<=15) then local v157=0;local v158;while true do if (0==v157) then v158=v93[2];v91[v158](v21(v91,v158 + 1 + 0 ,v86));break;end end elseif (v94==16) then do return v91[v93[2]]();end else v77[v93[3]]=v91[v93[2]];end elseif (v94<=18) then v91[v93[2]]= #v91[v93[3]];elseif (v94>(46 -27)) then v91[v93[2]]=v93[3];else local v244=0;local v245;local v246;while true do if (v244==1) then for v380=v245 + 1 ,v86 do v15(v246,v91[v380]);end break;end if (v244==0) then v245=v93[2];v246=v91[v245];v244=1;end end end elseif (v94<=(23 + 8)) then if (v94<=25) then if (v94<=22) then if (v94>21) then v91[v93[2]][v93[3]]=v91[v93[4]];else local v162=0;local v163;local v164;local v165;local v166;while true do if (2==v162) then for v338=v163,v86 do local v339=0;while true do if (v339==0) then v166=v166 + 1 ;v91[v338]=v164[v166];break;end end end break;end if (1==v162) then v86=(v165 + v163) -(3 -2) ;v166=0;v162=2;end if (v162==0) then v163=v93[2];v164,v165=v84(v91[v163](v21(v91,v163 + 1 ,v86)));v162=1;end end end elseif (v94<=23) then local v167=0;local v168;local v169;local v170;local v171;while true do if (v167==2) then for v340=v168,v86 do local v341=0;while true do if (v341==0) then v171=v171 + 1 ;v91[v340]=v169[v171];break;end end end break;end if (v167==0) then v168=v93[2];v169,v170=v84(v91[v168](v91[v168 + 1 ]));v167=1;end if (v167==1) then v86=(v170 + v168) -(953 -(802 + 150)) ;v171=0;v167=2;end end elseif (v94==24) then local v247=0;local v248;local v249;local v250;while true do if (v247==1) then v250={};v249=v18({},{[v7("\251\244\26\202\89\243\176","\200\164\171\115\164\61\150")]=function(v381,v382)local v383=0;local v384;while true do if (v383==0) then v384=v250[v382];return v384[2 -1 ][v384[2]];end end end,[v7("\129\203\13\64\148\183\250\7\64\155","\227\222\148\99\37")]=function(v385,v386,v387)local v388=v250[v386];v388[1 -0 ][v388[2]]=v387;end});v247=2;end if (v247==2) then for v390=1,v93[3 + 1 ] do local v391=0;local v392;while true do if (v391==0) then v85=v85 + 1 ;v392=v81[v85];v391=1;end if (v391==1) then if (v392[1]==(1074 -(915 + 82))) then v250[v390-1 ]={v91,v392[3]};else v250[v390-1 ]={v76,v392[3]};end v90[ #v90 + 1 ]=v250;break;end end end v91[v93[5 -3 ]]=v41(v248,v249,v77);break;end if (v247==0) then v248=v82[v93[3]];v249=nil;v247=1;end end elseif (v91[v93[2]]==v93[4]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v94<=28) then if (v94<=26) then v91[v93[2]]= #v91[v93[3]];elseif (v94>27) then if v91[v93[2]] then v85=v85 + 1 ;else v85=v93[3];end else local v251=0;local v252;while true do if (0==v251) then v252=v93[2];v91[v252]=v91[v252](v21(v91,v252 + 1 ,v86));break;end end end elseif (v94<=(17 + 12)) then v91[v93[2]][v91[v93[3]]]=v91[v93[4]];elseif (v94>30) then local v253=0;local v254;local v255;local v256;local v257;while true do if (0==v253) then v254=v93[2];v255,v256=v84(v91[v254](v21(v91,v254 + 1 ,v86)));v253=1;end if (1==v253) then v86=(v256 + v254) -1 ;v257=0;v253=2;end if (v253==2) then for v393=v254,v86 do local v394=0;while true do if (v394==0) then v257=v257 + 1 ;v91[v393]=v255[v257];break;end end end break;end end else local v258=v93[2];local v259=v91[v93[3 -0 ]];v91[v258 + 1 ]=v259;v91[v258]=v259[v93[1191 -(1069 + 118) ]];end elseif (v94<=36) then if (v94<=33) then if (v94==(72 -40)) then v91[v93[2]]=v91[v93[6 -3 ]] + v93[4] ;else local v176=v93[2];local v177,v178=v84(v91[v176](v21(v91,v176 + 1 ,v93[3])));v86=(v178 + v176) -1 ;local v179=0;for v220=v176,v86 do local v221=0;while true do if (v221==0) then v179=v179 + 1 ;v91[v220]=v177[v179];break;end end end end elseif (v94<=34) then v91[v93[2]]=v93[3]~=0 ;elseif (v94==35) then if (v91[v93[1 + 1 ]]==v93[6 -2 ]) then v85=v85 + 1 ;else v85=v93[3];end elseif v91[v93[2]] then v85=v85 + 1 + 0 ;else v85=v93[3];end elseif (v94<=39) then if (v94<=37) then v85=v93[3];elseif (v94>38) then v91[v93[2]]=v41(v82[v93[794 -(368 + 423) ]],nil,v77);else v91[v93[2]][v91[v93[3]]]=v91[v93[4]];end elseif (v94<=40) then local v182=0;local v183;while true do if (v182==0) then v183=v93[2];v91[v183](v21(v91,v183 + 1 ,v93[3]));break;end end elseif (v94==41) then do return v91[v93[2]]();end else local v266=v93[2];local v267,v268=v84(v91[v266](v91[v266 + 1 ]));v86=(v268 + v266) -1 ;local v269=0;for v321=v266,v86 do v269=v269 + (3 -2) ;v91[v321]=v267[v269];end end elseif (v94<=(81 -(10 + 8))) then if (v94<=52) then if (v94<=47) then if (v94<=44) then if (v94>43) then if  not v91[v93[7 -5 ]] then v85=v85 + 1 ;else v85=v93[3];end else v91[v93[2]]={};end elseif (v94<=45) then v91[v93[2]]=v93[3]~=0 ;elseif (v94>(488 -(416 + 26))) then v91[v93[2]][v93[3]]=v91[v93[4]];elseif  not v91[v93[2]] then v85=v85 + (3 -2) ;else v85=v93[3];end elseif (v94<=(22 + 27)) then if (v94==(84 -36)) then local v186=0;local v187;while true do if (0==v186) then v187=v93[440 -(145 + 293) ];v91[v187](v91[v187 + 1 ]);break;end end else for v222=v93[432 -(44 + 386) ],v93[3] do v91[v222]=nil;end end elseif (v94<=50) then v91[v93[2]]=v93[1489 -(998 + 488) ];elseif (v94==51) then v91[v93[2]]=v77[v93[3]];else local v275=0;local v276;while true do if (v275==0) then v276=v93[2];v91[v276](v91[v276 + 1 ]);break;end end end elseif (v94<=57) then if (v94<=54) then if (v94==53) then local v190=v93[2];local v191=v91[v190 + 2 ];local v192=v91[v190] + v191 ;v91[v190]=v192;if (v191>(0 + 0)) then if (v192<=v91[v190 + 1 ]) then local v349=0;while true do if (v349==0) then v85=v93[3];v91[v190 + 3 ]=v192;break;end end end elseif (v192>=v91[v190 + 1 ]) then local v350=0;while true do if (v350==0) then v85=v93[3];v91[v190 + 3 + 0 ]=v192;break;end end end else local v194=0;local v195;while true do if (v194==0) then v195=v93[2];do return v91[v195](v21(v91,v195 + 1 ,v93[3]));end break;end end end elseif (v94<=55) then v91[v93[2]]=v93[3] + v91[v93[4]] ;elseif (v94>56) then v91[v93[2]]=v91[v93[3]][v93[4]];else v91[v93[2]]();end elseif (v94<=60) then if (v94<=58) then local v197=0;local v198;local v199;while true do if (v197==0) then v198=v93[2];v199={};v197=1;end if (v197==1) then for v351=1, #v90 do local v352=0;local v353;while true do if (0==v352) then v353=v90[v351];for v426=0, #v353 do local v427=0;local v428;local v429;local v430;while true do if (v427==0) then v428=v353[v426];v429=v428[1];v427=1;end if (v427==1) then v430=v428[2];if ((v429==v91) and (v430>=v198)) then v199[v430]=v429[v430];v428[1]=v199;end break;end end end break;end end end break;end end elseif (v94>59) then v91[v93[774 -(201 + 571) ]]=v76[v93[3]];else v91[v93[2]]=v76[v93[3]];end elseif (v94<=61) then local v200=0;local v201;while true do if (v200==0) then v201=v93[2];v91[v201]=v91[v201](v21(v91,v201 + 1 ,v93[1141 -(116 + 1022) ]));break;end end elseif (v94>62) then v85=v93[3];else v91[v93[2]]=v91[v93[3]] + v93[4] ;end elseif (v94<=74) then if (v94<=68) then if (v94<=65) then if (v94==(266 -202)) then local v202=v93[2 + 1 ];local v203=v91[v202];for v224=v202 + 1 ,v93[4] do v203=v203   .. v91[v224] ;end v91[v93[2]]=v203;else v91[v93[2]]();end elseif (v94<=66) then v91[v93[2]]=v91[v93[3]]%v93[14 -10 ] ;elseif (v94>67) then local v285=0;local v286;while true do if (v285==0) then v286=v93[2];v91[v286](v21(v91,v286 + 1 ,v86));break;end end else local v287=0;local v288;while true do if (v287==0) then v288=v93[2];do return v91[v288](v21(v91,v288 + 1 ,v93[3]));end break;end end end elseif (v94<=71) then if (v94<=(244 -175)) then local v206=0;local v207;local v208;while true do if (v206==0) then v207=v93[2];v208=v91[v207];v206=1;end if (v206==1) then for v354=v207 + 1 ,v86 do v15(v208,v91[v354]);end break;end end elseif (v94==70) then v91[v93[2]]=v91[v93[3]]%v91[v93[4]] ;else local v290=0;local v291;local v292;local v293;local v294;while true do if (v290==1) then v86=(v293 + v291) -1 ;v294=0;v290=2;end if (2==v290) then for v395=v291,v86 do local v396=0;while true do if (0==v396) then v294=v294 + (860 -(814 + 45)) ;v91[v395]=v292[v294];break;end end end break;end if (v290==0) then v291=v93[2];v292,v293=v84(v91[v291](v21(v91,v291 + 1 ,v93[3])));v290=1;end end end elseif (v94<=72) then local v209=0;local v210;while true do if (v209==0) then v210=v93[2];v91[v210](v21(v91,v210 + 1 ,v93[3]));break;end end elseif (v94==73) then for v332=v93[2],v93[3] do v91[v332]=nil;end else v91[v93[4 -2 ]]=v91[v93[3]][v93[4]];end elseif (v94<=79) then if (v94<=76) then if (v94==75) then local v211=0;local v212;while true do if (v211==0) then v212=v93[2];do return v21(v91,v212,v86);end break;end end else local v213=0;local v214;while true do if (0==v213) then v214=v93[2];v91[v214]=v91[v214]();break;end end end elseif (v94<=77) then v91[v93[2]]=v91[v93[3]];elseif (v94>78) then local v297=v93[2];local v298=v91[v297];local v299=v91[v297 + 2 ];if (v299>0) then if (v298>v91[v297 + 1 ]) then v85=v93[3];else v91[v297 + 3 ]=v298;end elseif (v298<v91[v297 + 1 ]) then v85=v93[3];else v91[v297 + 3 ]=v298;end else v91[v93[2]]=v77[v93[3]];end elseif (v94<=82) then if (v94<=80) then do return;end elseif (v94==81) then v91[v93[1 + 1 ]]=v91[v93[3]]%v93[4] ;else v91[v93[2]]={};end elseif (v94<=83) then local v217=0;local v218;while true do if (0==v217) then v218=v93[2];do return v21(v91,v218,v86);end break;end end elseif (v94==84) then local v304=0;local v305;local v306;local v307;while true do if (v304==1) then v307={};v306=v18({},{[v7("\12\109\91\248\253\54\74","\153\83\50\50\150")]=function(v401,v402)local v403=0;local v404;while true do if (0==v403) then v404=v307[v402];return v404[1][v404[2]];end end end,[v7("\98\73\125\25\100\162\67\89\115\107","\45\61\22\19\124\19\203")]=function(v405,v406,v407)local v408=0;local v409;while true do if (v408==0) then v409=v307[v406];v409[1][v409[2]]=v407;break;end end end});v304=2;end if (v304==2) then for v410=1,v93[4] do local v411=0;local v412;while true do if (v411==0) then v85=v85 + 1 + 0 ;v412=v81[v85];v411=1;end if (v411==1) then if (v412[1]==77) then v307[v410-1 ]={v91,v412[3]};else v307[v410-(886 -(261 + 624)) ]={v76,v412[3]};end v90[ #v90 + 1 ]=v307;break;end end end v91[v93[2]]=v41(v305,v306,v77);break;end if (v304==0) then v305=v82[v93[3]];v306=nil;v304=1;end end else local v308=0;local v309;local v310;local v311;while true do if (1==v308) then v311=v91[v309] + v310 ;v91[v309]=v311;v308=2;end if (v308==0) then v309=v93[2];v310=v91[v309 + 2 ];v308=1;end if (v308==2) then if (v310>(0 -0)) then if (v311<=v91[v309 + 1 ]) then v85=v93[3];v91[v309 + 3 ]=v311;end elseif (v311>=v91[v309 + (1081 -(1020 + 60)) ]) then local v450=0;while true do if (v450==0) then v85=v93[3];v91[v309 + 3 ]=v311;break;end end end break;end end end v85=v85 + 1 ;break;end end end end;end return v41(v40(),{},v28)(...);end end end vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.14) ~  Much Love, Ferib 

]]--
